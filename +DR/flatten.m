function [dr,affpt] = flatten(desc)
dr = struct('desc',[], ...
            'affpt',[], ...
            'drid',[]);
dr.drid = [];
affpt = [];
maxid = 0;

ls = ceil(log2(numel(desc)-1))+1;
for k = 1:numel(desc)
    for k2 = 1:numel(desc{k}.affpt)
        desc{k}.affpt(k2).id = ...
            desc{k}.affpt(k2).id+maxid;
        desc{k}.affpt(k2).class = ...
            bitor(uint32(bitshift(desc{k}.affpt(k2).class,ls)),uint32(k-1));
    end

    dr.desc = cat(2,dr.desc, ...
                  double(reshape([desc{k}.affpt(:).desc],128,[])));
    dr.affpt = cat(2,dr.affpt,reshape([ ...
        [desc{k}.affpt(:).x]; ...
        [desc{k}.affpt(:).y]; ...
        [desc{k}.affpt(:).a11]; ...
        [desc{k}.affpt(:).a12]; ...
        [desc{k}.affpt(:).a21]; ...
        [desc{k}.affpt(:).a22] ],6,[]));

    %    tmpdrid = bsxfun(@bitor,[desc{k}.affpt(:).class],bitshift(k,1));
    dr.drid = cat(2,dr.drid,[desc{k}.affpt(:).class]);
    affpt = cat(2,affpt,[desc{k}.affpt(:)]');
    maxid = max([desc{1}.affpt(:).id]);
end
dr.num_dr = size(dr.desc,2);

kkk = 3;