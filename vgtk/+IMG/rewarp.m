function [timg,T,A] = rewarp(img, H, ru_cc, ru_q, rd_cc, rd_q, varargin)
     rd_xform = [];
     ru_xform = [];
     if rd_q ~= 0
          rd_xform = CAM.make_rd_div_tform(rd_cc, rd_q);
     end
     if ru_q ~= 0
          ru_xform = CAM.make_ru_div_tform(ru_cc, ru_q);
     end

    assert(all(size(H) == [3 3]));

    [ny,nx,~] = size(img);
    cfg.border = [1  1; ...
                 nx 1; ...    
                 nx ny; ...
                 1  ny];
    cfg.size = size(img);
    cfg.fill = [255 255 255]';
    cfg.scale_output = 1;
    
    [cfg,leftover] = cmp_argparse(cfg,varargin{:});
    
    leftover = { 'Fill', cfg.fill, ...
                 leftover{:} };

    if isempty(rd_xform) && isempty(ru_xform)
         T = maketform('projective',H');
    elseif isempty(ru_xform)
         T = maketform('composite', ...
                       rd_xform, ...
                       maketform('projective',H'));
    elseif isempty(rd_xform)
         T = maketform('composite', ...
                       maketform('projective',H'),...
                       ru_xform);
    else
         T = maketform('composite', ...
                       rd_xform, ...
                       maketform('projective',H'),...
                       ru_xform);
    end

    A = eye(3);


%     [T,A2] = IMG.register_by_size(T,cfg.border,cfg.size, ...
                              %     'LockAspectRatio','true');
%     A = A2*A;
    
%     outbounds = tformfwd(T,cfg.border);

%     timg = imtransform(img,T,'bicubic', ...
%                        'XData', [min(outbounds(:,1)) max(outbounds(:,1))], ...
%                        'YData', [min(outbounds(:,2)) max(outbounds(:,2))], ...
%                        'XYScale',1/cfg.scale_output, ...
%                        leftover{:}); 

     timg = imtransform(img,T,'bicubic', ...
                       'XData', [1 nx], ...
                       'YData', [1 ny], ...
                       'XYScale',1/cfg.scale_output, ...
                       leftover{:}); 
    
%     trect = [min(outbounds(:,1)) min(outbounds(:,2)) ...
          %    max(outbounds(:,1)) max(outbounds(:,2))];
                                                     
end