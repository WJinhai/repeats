function [] = cvdb_create(conn)
    connh = conn.Handle;    
    
    stm = connh.prepareStatement(['SELECT COUNT(*) FROM information_schema.tables ' ...
                        'WHERE table_name=''imgs''']);
    rs = stm.executeQuery();
    rs.next();
    count = rs.getInt(1);
    if (count == 0)
        stm = connh.prepareStatement(['CREATE TABLE imgs(' ...
                            'id BINARY(32), ' ...
                            'absolute_path TEXT, ' ...
                            'relative_path TEXT NOT NULL, ' ...
                            'name TEXT NOT NULL, ' ...
                            'ext TEXT NOT NULL, ' ...
                            'height INTEGER NOT NULL, ' ...
                            'width INTEGER NOT NULL, ' ...
                            'PRIMARY KEY(id))']);
        stm.execute();
    end
    
    stm = connh.prepareStatement(['SELECT COUNT(*) FROM information_schema.tables ' ...
                        'WHERE table_name=''img_pairs''']);
    rs = stm.executeQuery();
    rs.next();
    count = rs.getInt(1);
    if (count == 0)
        stm = connh.prepareStatement(['CREATE TABLE img_pairs(' ...
                            'id BINARY(32) NOT NULL, ' ...
                            'img1_id BINARY(32) NOT NULL, ' ...
                            'img2_id BINARY(32) NOT NULL, ' ...
                            'PRIMARY KEY(id), ' ...
                            'CONSTRAINT FOREIGN KEY(img1_id) REFERENCES imgs(id), ' ...
                            'CONSTRAINT FOREIGN KEY(img2_id) REFERENCES imgs(id))']);
        stm.execute();
    end    
    
    stm = connh.prepareStatement(['SELECT COUNT(*) FROM information_schema.tables ' ...
                        'WHERE table_name=''stereo_sets''']);
    rs = stm.executeQuery();
    rs.next();
    count = rs.getInt(1);
    if (count == 0)
        stm = connh.prepareStatement(['CREATE TABLE stereo_sets(' ...
                            'id INTEGER AUTO_INCREMENT, ', ...
                            'name VARCHAR(256) NOT NULL, ' ...
                            'pair_id BINARY(32) NOT NULL, ' ...
                            'description TEXT, ' ...
                            'acknowledgement TEXT, ' ...
                            'refs TEXT, ' ...
                            'PRIMARY KEY(id), ' ...
                            'INDEX(name), ' ...
                            'CONSTRAINT FOREIGN KEY(pair_id) ' ...
                            'REFERENCES img_pairs(id))']);
        stm.execute();
    end
    
    stm = connh.prepareStatement(['SELECT COUNT(*) FROM information_schema.tables ' ...
                        'WHERE table_name=''img_sets''']);
    rs = stm.executeQuery();
    rs.next();
    count = rs.getInt(1);
    if (count == 0)
        stm = connh.prepareStatement(['CREATE TABLE img_sets(' ...
                            'id INTEGER AUTO_INCREMENT, ' ...
                            'name VARCHAR(128) NOT NULL, ' ...
                            'img_id BINARY(32) NOT NULL, ' ...
                            'description TEXT, ' ...
                            'PRIMARY KEY(id), ' ...
                            'INDEX(name), ' ...
                            'CONSTRAINT FOREIGN KEY(img_id) REFERENCES imgs(id))']);
        stm.execute();
    end

    stm = connh.prepareStatement(['SELECT COUNT(*) FROM information_schema.tables ' ...
                        'WHERE table_name=''stereo_experiments''']);
    rs = stm.executeQuery();
    rs.next();
    count = rs.getInt(1);
    if (count == 0)
        stm = connh.prepareStatement(['CREATE TABLE stereo_experiments (' ...
                            'name VARCHAR(128) NOT NULL, ' ...
                            'pair_id BINARY(32) NOT NULL, ' ...
                            'us_elapsed_time INTEGER, ' ... 
                            'algorithm TEXT, ' ...
                            'PRIMARY KEY(name), ' ...
                            'CONSTRAINT FOREIGN KEY(pair_id) REFERENCES img_pairs(id))']);
        stm.execute();
    end
    
    stm = connh.prepareStatement(['SELECT COUNT(*) FROM information_schema.tables ' ...
                        'WHERE table_name=''tc''']);
    rs = stm.executeQuery();
    rs.next();
    count = rs.getInt(1);
    if (count == 0)        
        stm = connh.prepareStatement(['CREATE TABLE tc (' ...
                            'id INTEGER AUTO_INCREMENT, ' ...
                            'tc BLOB, ' ... 
                            'pair_id BINARY(32) NOT NULL, ' ...
                            'count INTEGER NOT NULL, ' ...
                            'count_scv INTEGER, ' ...
                            'type TEXT, ' ...
                            'us_time_elapsed INTEGER, ' ...
                            'us_time_elapsed_scv INTEGER, ' ...
                            'PRIMARY KEY(id), ' ...
                            'INDEX(pair_id), ' ...
                            'CONSTRAINT FOREIGN KEY(pair_id) ' ...
                            'REFERENCES img_pairs(id))']);
        stm.execute();
    end
    
     stm = connh.prepareStatement(['SELECT COUNT(*) FROM information_schema.tables ' ...
                        'WHERE table_name=''rnsc_cfgs''']);
    rs = stm.executeQuery();
    rs.next();
    count = rs.getInt(1);
    if (count == 0)
        stm = connh.prepareStatement(['CREATE TABLE rnsc_cfgs (' ...
                            'id BINARY(16) NOT NULL, ' ...
                            'sample_size INTEGER, ' ...
                            'threshold REAL, ' ...
                            'confidence REAL, ' ...
                            'min_trials INTEGER, ' ...
                            'max_trials INTEGER, ' ...
                            'max_data_retries INTEGER, ' ...
                            'model_fn TEXT, ' ...
                            'error_fn TEXT, ' ...
                            'score_fn TEXT, ' ...
                            'sample_degen_fn TEXT, ' ...
                            'model_degen_fn TEXT, ' ...
                            'lo_fn TEXT, ' ...
                            'always_model_degen BOOLEAN, ' ...
                            'PRIMARY KEY(id))']);
        stm.execute();
    end
      
    stm = connh.prepareStatement(['SELECT COUNT(*) FROM information_schema.tables ' ...
                        'WHERE table_name=''rnsc''']);
    rs = stm.executeQuery();
    rs.next();
    count = rs.getInt(1);
    if (count == 0)
        stm = connh.prepareStatement(['CREATE TABLE rnsc (' ...
                            'id INTEGER AUTO_INCREMENT, ' ...
                            'experiment_name VARCHAR(128) NOT NULL, ' ...
                            'cfg_id BINARY(16), ' ...
                            'inlying_set BLOB NOT NULL, ' ...
                            'model BLOB NOT NULL, ' ...
                            'errors BLOB, ' ...
                            'score DOUBLE, ' ...
                            'samples_drawn INTEGER NOT NULL, ' ...
                            'sample_degen_count INTEGER, ' ...
                            'us_time_elapsed INTEGER, ' ...
                            'PRIMARY KEY(id), ' ...
                            'CONSTRAINT FOREIGN KEY(cfg_id) REFERENCES ' ...
                            'rnsc_cfgs(id))']);
        stm.execute();
    end
    
    stm = connh.prepareStatement(['SELECT COUNT(*) FROM information_schema.tables ' ...
                        'WHERE table_name=''primitives''']);
    rs = stm.executeQuery();
    rs.next();
    count = rs.getInt(1);
    if (count == 0)
        stm = connh.prepareStatement(['CREATE TABLE primitives (' ...
                            'id INTEGER AUTO_INCREMENT, ' ...
                            'data BLOB NOT NULL, ' ...
                            'img_id BINARY(32) NOT NULL, ' ...
                            'name VARCHAR(256), ' ...
                            'PRIMARY KEY(id), ' ...
                            'INDEX(name), ' ...
                            'CONSTRAINT FOREIGN KEY(img_id) REFERENCES ' ...
                            'imgs(id))']);
        stm.execute();
    end     
    
    stm = connh.prepareStatement(['SELECT COUNT(*) FROM information_schema.tables ' ...
                        'WHERE table_name=''rnsc_primitives''']);
    rs = stm.executeQuery();
    rs.next();
    count = rs.getInt(1);
    if (count == 0)
        stm = connh.prepareStatement(['CREATE TABLE rnsc_primitives (' ...
                            'id INTEGER AUTO_INCREMENT, ' ...
                            'rnsc_id INTEGER NOT NULL, ' ....
                            'primitives_id INTEGER NOT NULL, ' ...
                            'sample_set BLOB NOT NULL, ' ...
                            'PRIMARY KEY(id), ' ...
                            'CONSTRAINT FOREIGN KEY(rnsc_id) REFERENCES ' ...
                            'rnsc(id), ' ...
                            'CONSTRAINT FOREIGN KEY(primitives_id) ' ...
                            'REFERENCES primitives(id))']);

        stm.execute();
    end        
 
    stm = connh.prepareStatement(['SELECT COUNT(*) FROM information_schema.tables ' ...
                        'WHERE table_name=''tags''']);
    rs = stm.executeQuery();
    rs.next();
    count = rs.getInt(1);
    if (count == 0)
        stm = connh.prepareStatement(['CREATE TABLE tags (' ...
                            'id INTEGER AUTO_INCREMENT, ' ...
                            'name VARCHAR(128) NOT NULL, ' ...
                            'PRIMARY KEY(id), ' ...
                            'INDEX(name))']);
        stm.execute();
    end
    
    stm = connh.prepareStatement(['SELECT COUNT(*) FROM information_schema.tables ' ...
                        'WHERE table_name=''stereo_taggings''']);
    rs = stm.executeQuery();
    rs.next();
    count = rs.getInt(1);
    if (count == 0)
        stm = connh.prepareStatement(['CREATE TABLE stereo_taggings (' ...
                            'id INTEGER AUTO_INCREMENT, ' ...
                            'tag_id INTEGER NOT NULL, ' ....
                            'pair_id BINARY(32) NOT NULL, ' ...
                            'PRIMARY KEY(id), ' ...
                            'CONSTRAINT FOREIGN KEY(tag_id) REFERENCES ' ...
                            'tags(id), ' ...
                            'CONSTRAINT FOREIGN KEY(pair_id) ' ...
                            'REFERENCES img_pairs(id))']);
        stm.execute();
    end

    stm = connh.prepareStatement(['SELECT COUNT(*) FROM information_schema.tables ' ...
                        'WHERE table_name=''geometry_taggings''']);
    rs = stm.executeQuery();
    rs.next();
    count = rs.getInt(1);
    if (count == 0)
        stm = connh.prepareStatement(['CREATE TABLE geometry_taggings (' ...
                            'id INTEGER AUTO_INCREMENT, ' ...
                            'tag_id INTEGER NOT NULL, ' ...
                            'primitives_id INTEGER NOT NULL, ' ...
                            'PRIMARY KEY(id), ' ...
                            'CONSTRAINT FOREIGN KEY(tag_id) REFERENCES ' ...
                            'tags(id), ' ...
                            'CONSTRAINT FOREIGN KEY(primitives_id) REFERENCES ' ...
                            'primitives(id))']);
        stm.execute();
    end
    
    
    stm = connh.prepareStatement(['SELECT COUNT(*) FROM information_schema.tables ' ...
                        'WHERE table_name=''rnsc_taggings''']);
    rs = stm.executeQuery();
    rs.next();
    count = rs.getInt(1);
    if (count == 0)
        stm = connh.prepareStatement(['CREATE TABLE rnsc_taggings (' ...
                            'id INTEGER AUTO_INCREMENT, ' ...
                            'tag_id INTEGER NOT NULL, ' ...
                            'rnsc_id INTEGER NOT NULL, ' ...
                            'PRIMARY KEY(id), ' ...
                            'CONSTRAINT FOREIGN KEY(tag_id) REFERENCES ' ...
                            'tags(id), ' ...
                            'CONSTRAINT FOREIGN KEY(rnsc_id) REFERENCES ' ...
                            'rnsc(id))']);
        stm.execute();
    end
    
    
    stm = connh.prepareStatement(['SELECT COUNT(*) FROM information_schema.tables ' ...
                        'WHERE table_name=''calib_results''']);
    rs = stm.executeQuery();
    rs.next();
    count = rs.getInt(1);
    if (count == 0)
        stm = connh.prepareStatement(['CREATE TABLE calib_results (' ...
                            'id INTEGER AUTO_INCREMENT, ' ...
                            'results BLOB, ' ...
                            'calib_data_name VARCHAR(256) NOT NULL, ' ...
                            'name TEXT NOT NULL, ' ...
                            'PRIMARY KEY(id), ' ...
                            'CONSTRAINT FOREIGN KEY(calib_data_name) REFERENCES ' ...
                            'calib_data(name))']);
        stm.execute();
    end
