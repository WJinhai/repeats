function [] = cvdb_create(conn)
    connh = conn.Handle;    
    
    stm = connh.prepareStatement(['CREATE TABLE IF NOT EXISTS imgs(' ...
                        'id BINARY(32), ' ...
                        'url TEXT, ' ...
                        'relative_path TEXT NOT NULL, ' ...
                        'name TEXT NOT NULL, ' ...
                        'ext TEXT NOT NULL, ' ...
                        'height INTEGER NOT NULL, ' ...
                        'width INTEGER NOT NULL, ' ...
                        'PRIMARY KEY(id))']);
    stm.execute();

    
    stm = connh.prepareStatement(['CREATE TABLE IF NOT EXISTS img_pairs(' ...
                        'id BINARY(32) NOT NULL, ' ...
                        'img1_id BINARY(32) NOT NULL, ' ...
                        'img2_id BINARY(32) NOT NULL, ' ...
                        'PRIMARY KEY(id), ' ...
                        'CONSTRAINT FOREIGN KEY(img1_id) REFERENCES imgs(id), ' ...
                        'CONSTRAINT FOREIGN KEY(img2_id) REFERENCES imgs(id))']);
    stm.execute();
    
    stm = connh.prepareStatement(['CREATE TABLE IF NOT EXISTS stereo_sets(' ...
                        'id INTEGER AUTO_INCREMENT, ', ...
                        'name VARCHAR(256) NOT NULL, ' ...
                        'pair_id BINARY(32) NOT NULL, ' ...
                        'description TEXT, ' ...
                        'acknowledgement TEXT, ' ...
                        'refs TEXT, ' ...
                        'PRIMARY KEY(id), ' ...
                        'INDEX(name), ' ...
                        'CONSTRAINT FOREIGN KEY(pair_id) ' ...
                        'REFERENCES img_pairs(id))']);
    stm.execute();
    
    stm = connh.prepareStatement(['CREATE TABLE IF NOT EXISTS img_sets(' ...
                        'id INTEGER AUTO_INCREMENT, ' ...
                        'name VARCHAR(128) NOT NULL, ' ...
                        'img_id BINARY(32) NOT NULL, ' ...
                        'description TEXT, ' ...
                        'PRIMARY KEY(id), ' ...
                        'INDEX(name), ' ...
                        'CONSTRAINT FOREIGN KEY(img_id) REFERENCES imgs(id))']);
    stm.execute();
    
                             
    sql_statement = ['CREATE TABLE IF NOT EXISTS stereo_experiments (' ...
                     'id INTEGER AUTO_INCREMENT, ' ...
                     'set_id VARCHAR(7), ' ...
                     'user VARCHAR(256), ' ...
                     'begin TIMESTAMP DEFAULT ''0000-00-00 00:00:00'', ' ...
                     'end TIMESTAMP DEFAULT ''0000-00-00 00:00:00'', ' ...
                     'title VARCHAR(128) NOT NULL, ' ...
                     'pair_id BINARY(32) NOT NULL, ' ...
                     'cfg_id BINARY(16) NOT NULL, ' ...
                     'PRIMARY KEY(id), ' ...
                     'CONSTRAINT FOREIGN KEY(pair_id) REFERENCES ' ...
                     'img_pairs(id))'];
    stm = connh.prepareStatement(sql_statement);
    stm.execute();
    
    sql_statement = ['DROP TRIGGER IF EXISTS ' ...
                     'stereo_experiments.begin_stereo_experiment'];
    stm = connh.prepareStatement(sql_statement);
    stm.execute();
    
    sql_statement = ['CREATE TRIGGER begin_stereo_experiment BEFORE INSERT ' ...
                     'ON stereo_experiments ' ...
                     'FOR EACH ROW BEGIN ' ... 
                     '   SET NEW.begin = NOW(); ' ...
                     '   SET NEW.user = SESSION_USER(); ' ...
                     'END']; 
    stm = connh.prepareStatement(sql_statement);
    stm.execute();

    sql_statement = ['DROP TRIGGER IF EXISTS ' ...
                     'stereo_experiments.end_stereo_experiment'];
    stm = connh.prepareStatement(sql_statement);
    stm.execute();
    
    sql_statement = ['CREATE TRIGGER end_stereo_experiment ' ...
                     'BEFORE UPDATE ON stereo_experiments ' ...
                     'FOR EACH ROW SET NEW.end = NOW()'];
    stm = connh.prepareStatement(sql_statement);
    stm.execute();
            
    stm = connh.prepareStatement(['CREATE TABLE IF NOT EXISTS rnsc_cfgs (' ...
                        'id BINARY(16) NOT NULL, ' ...
                        'sample_size INTEGER, ' ...
                        'threshold REAL, ' ...
                        'confidence REAL, ' ...
                        'min_trials INTEGER, ' ...
                        'max_trials INTEGER, ' ...
                        'max_data_retries INTEGER, ' ...
                        'model_fn TEXT, ' ...
                        'error_fn TEXT, ' ...
                        'score_fn TEXT, ' ...
                        'sample_degen_fn TEXT, ' ...
                        'model_degen_fn TEXT, ' ...
                        'lo_fn TEXT, ' ...
                        'always_model_degen BOOLEAN, ' ...
                        'PRIMARY KEY(id))']);
    stm.execute();
    
    stm = connh.prepareStatement(['CREATE TABLE IF NOT EXISTS rnsc (' ...
                        'id INTEGER AUTO_INCREMENT, ' ...
                        'title VARCHAR(128) NOT NULL, ' ...
                        'exp_id INTEGER NOT NULL, ' ...
                        'cfg_id BINARY(16) NOT NULL, ' ...
                        'inlying_set BLOB NOT NULL, ' ...
                        'errors BLOB, ' ...
                        'score DOUBLE, ' ...
                        'samples_drawn INTEGER NOT NULL, ' ...
                        'sample_degen_count INTEGER, ' ...
                        'us_time_elapsed INTEGER, ' ...
                        'PRIMARY KEY(id), ' ...
                        'CONSTRAINT FOREIGN KEY(cfg_id) REFERENCES ' ...
                        'rnsc_cfgs(id))']);
    stm.execute();
    
    stm = connh.prepareStatement(['CREATE TABLE IF NOT EXISTS gs_cfgs (' ...
                        'id BINARY(16) NOT NULL, ' ...
                        'max_iter INTEGER, ' ...
                        'epsilon DOUBLE, ' ...
                        'model_fn TEXT, ' ...
                        'error_fn TEXT, ' ...
                        'score_fn TEXT, ' ...
                        'PRIMARY KEY(id))']);
    stm.execute();
    
    stm = connh.prepareStatement(['CREATE TABLE IF NOT EXISTS gs (' ...
                        'id INTEGER AUTO_INCREMENT, ' ...
                        'title VARCHAR(128) NOT NULL, ' ...
                        'exp_id INTEGER NOT NULL, ' ...
                        'cfg_id BINARY(16), ' ...
                        'weights BLOB NOT NULL, ' ...
                        'errors BLOB, ' ...
                        'score DOUBLE, ' ...
                        'iterations INTEGER NOT NULL, ' ...
                        'us_time_elapsed INTEGER, ' ...
                        'PRIMARY KEY(id), ' ...
                        'CONSTRAINT FOREIGN KEY(cfg_id) REFERENCES ' ...
                        'gs_cfgs(id))']);
    stm.execute();
    
    stm = connh.prepareStatement(['CREATE TABLE IF NOT EXISTS primitives (' ...
                        'id INTEGER AUTO_INCREMENT, ' ...
                        'data BLOB NOT NULL, ' ...
                        'img_id BINARY(32) NOT NULL, ' ...
                        'name VARCHAR(256), ' ...
                        'PRIMARY KEY(id), ' ...
                        'INDEX(name), ' ...
                        'CONSTRAINT FOREIGN KEY(img_id) REFERENCES ' ...
                        'imgs(id))']);
    stm.execute();

    stm = connh.prepareStatement(['CREATE TABLE IF NOT EXISTS rnsc_primitives (' ...
                        'id INTEGER AUTO_INCREMENT, ' ...
                        'rnsc_id INTEGER NOT NULL, ' ....
                        'primitives_id INTEGER NOT NULL, ' ...
                        'sample_set BLOB NOT NULL, ' ...
                        'PRIMARY KEY(id), ' ...
                        'CONSTRAINT FOREIGN KEY(rnsc_id) REFERENCES ' ...
                        'rnsc(id), ' ...
                        'CONSTRAINT FOREIGN KEY(primitives_id) ' ...
                        'REFERENCES primitives(id))']);

    stm.execute();

    stm = connh.prepareStatement(['CREATE TABLE IF NOT EXISTS tags (' ...
                        'id INTEGER AUTO_INCREMENT, ' ...
                        'name VARCHAR(128) NOT NULL, ' ...
                        'PRIMARY KEY(id), ' ...
                        'INDEX(name))']);
    stm.execute();

    stm = connh.prepareStatement(['CREATE TABLE IF NOT EXISTS stereo_taggings (' ...
                        'id INTEGER AUTO_INCREMENT, ' ...
                        'tag_id INTEGER NOT NULL, ' ....
                        'pair_id BINARY(32) NOT NULL, ' ...
                        'PRIMARY KEY(id), ' ...
                        'CONSTRAINT FOREIGN KEY(tag_id) REFERENCES ' ...
                        'tags(id), ' ...
                        'CONSTRAINT FOREIGN KEY(pair_id) ' ...
                        'REFERENCES img_pairs(id))']);
    stm.execute();

    stm = connh.prepareStatement(['CREATE TABLE IF NOT EXISTS geometry_taggings (' ...
                        'id INTEGER AUTO_INCREMENT, ' ...
                        'tag_id INTEGER NOT NULL, ' ...
                        'primitives_id INTEGER NOT NULL, ' ...
                        'PRIMARY KEY(id), ' ...
                        'CONSTRAINT FOREIGN KEY(tag_id) REFERENCES ' ...
                        'tags(id), ' ...
                        'CONSTRAINT FOREIGN KEY(primitives_id) REFERENCES ' ...
                        'primitives(id))']);
    stm.execute();

    stm = connh.prepareStatement(['CREATE TABLE IF NOT EXISTS rnsc_taggings (' ...
                        'id INTEGER AUTO_INCREMENT, ' ...
                        'tag_id INTEGER NOT NULL, ' ...
                        'rnsc_id INTEGER NOT NULL, ' ...
                        'PRIMARY KEY(id), ' ...
                        'CONSTRAINT FOREIGN KEY(tag_id) REFERENCES ' ...
                        'tags(id), ' ...
                        'CONSTRAINT FOREIGN KEY(rnsc_id) REFERENCES ' ...
                        'rnsc(id))']);
    stm.execute();

    stm = connh.prepareStatement(['CREATE TABLE IF NOT EXISTS calib_results (' ...
                        'id INTEGER AUTO_INCREMENT, ' ...
                        'results BLOB, ' ...
                        'calib_data_name VARCHAR(256) NOT NULL, ' ...
                        'name TEXT NOT NULL, ' ...
                        'PRIMARY KEY(id), ' ...
                        'CONSTRAINT FOREIGN KEY(calib_data_name) REFERENCES ' ...
                        'calib_data(name))']);
    stm.execute();

    stm = connh.prepareStatement(['CREATE TABLE IF NOT EXISTS detector_cfgs (' ...
                        'id BINARY(16) NOT NULL, ' ...
                        'cfg BLOB, ' ...
                        'PRIMARY KEY(id))']);
    stm.execute();

    stm = connh.prepareStatement(['CREATE TABLE IF NOT EXISTS detectors (' ...
                        'id INTEGER AUTO_INCREMENT, ' ...
                        'cfg_id BINARY(16) NOT NULL, ' ...
                        'pair_id BINARY(32) NOT NULL, ' ...
                        'data BLOB, ' ...
                        'PRIMARY KEY(id), ' ...
                        'CONSTRAINT FOREIGN KEY(cfg_id) REFERENCES ' ...
                        'detector_cfgs(cfg_id), ' ...
                        'CONSTRAINT FOREIGN KEY(pair_id) REFERENCES ' ...
                        'img_pairs(id))']);
    stm.execute();
    
    stm = connh.prepareStatement(['CREATE TABLE IF NOT EXISTS descriptor_cfgs (' ...
                        'id BINARY(16) NOT NULL, ' ...
                        'cfg BLOB, ' ...
                        'PRIMARY KEY(id))']);
    stm.execute();

    stm = connh.prepareStatement(['CREATE TABLE IF NOT EXISTS descriptors (' ...
                        'id INTEGER AUTO_INCREMENT, ' ...
                        'cfg_id BINARY(16) NOT NULL, ' ...
                        'pair_id BINARY(32) NOT NULL, ' ...
                        'data BLOB, ' ...
                        'PRIMARY KEY(id), ' ... 
                        'CONSTRAINT FOREIGN KEY(cfg_id) REFERENCES ' ...
                        'descriptor_cfgs(cfg_id), ' ...
                        'CONSTRAINT FOREIGN KEY(pair_id) REFERENCES ' ...
                        'img_pairs(pair_id))']);
    stm.execute();

    stm = connh.prepareStatement(['CREATE TABLE IF NOT EXISTS tc_cfgs (' ...
                        'id BINARY(16) NOT NULL, ' ...
                        'cfg BLOB, ' ...
                        'PRIMARY KEY(id))']);
    stm.execute();
    
    stm = connh.prepareStatement(['CREATE TABLE IF NOT EXISTS tc (' ...
                        'id INTEGER AUTO_INCREMENT, ' ...
                        'cfg_id BINARY(16) NOT NULL, ' ...
                        'pair_id BINARY(32) NOT NULL, ' ...
                        'data BLOB NOT NULL, ' ...
                        'count INTEGER NOT NULL, ' ...
                        'type ENUM(''LAF''), ' ...
                        'us_time_elapsed INTEGER, ' ...
                        'PRIMARY KEY(id), '  ...
                        'CONSTRAINT FOREIGN KEY(cfg_id) REFERENCES ' ...
                        'tc_cfgs(cfg_id), ' ...
                        'CONSTRAINT FOREIGN KEY(pair_id) REFERENCES ' ...
                        'img_pairs(pair_id))']);
    stm.execute();

    stm = connh.prepareStatement(['CREATE TABLE IF NOT EXISTS two_view_matrices (' ...
                        'id INTEGER AUTO_INCREMENT, ' ...
                        'matrix BINARY(72) NOT NULL, ' ...
                        'type ENUM(''fundamental'',''affine fundamental'',''essential'',''homography'',''affinity''), ' ...
                        'exp_id INTEGER NOT NULL, ' ...
                        'pair_id BINARY(32) NOT NULL, ' ...
                        'rnsc_id INTEGER, ' ...
                        'gs_id INTEGER, ' ...
                        'PRIMARY KEY(id), ' ...
                        'CONSTRAINT FOREIGN KEY(rnsc_id) ' ...
                        'REFERENCES rnsc(id), ' ...
                        'CONSTRAINT FOREIGN KEY(gs_id) ' ...
                        'REFERENCES gs(id))']);
    stm.execute();