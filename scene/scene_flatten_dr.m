function dr = scene_flatten_dr(dr_defs,detectors,descriptors,feat,desc)
kkk = 3;
dr.desc = [];
dr.xdesc = [];
dr.affpt = [];
dr.class = [];
dr.num_dr = 0;

for k = 1:numel(detectors)
    num_dr = numel(desc{k}.affpt);
    dr.num_dr = dr.num_dr+num_dr;
    dr.desc = cat(2,dr.desc, ...
                  double(reshape([desc{k}.affpt(:).desc],128,[])));
    dr.affpt = cat(2,dr.affpt,reshape([ ...
        [feat{k}.affpt(desc{k}.desc2dr).x]; ...
        [feat{k}.affpt(desc{k}.desc2dr).y]; ...
        [feat{k}.affpt(desc{k}.desc2dr).a11]; ...
        [feat{k}.affpt(desc{k}.desc2dr).a12]; ...
        [feat{k}.affpt(desc{k}.desc2dr).a21]; ...
        [feat{k}.affpt(desc{k}.desc2dr).a22] ],6,[]));

    dr.class = cat(2,dr.class,bitor([ desc{k}.affpt(:).class ], ...
                                    repmat(bitshift(dr_get_drids(dr_defs, ...
                                                      detectors(k)),1), ...
                                           1,num_dr)));
    if k > 1
        dr.desc2dr = cat(2,dr.desc2dr,desc{k}.desc2dr+feat{k-1}.num_upg);
    else
        dr.desc2dr = desc{k}.desc2dr;
    end
end