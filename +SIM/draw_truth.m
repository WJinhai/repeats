% Copyright (c) 2017 James Pritts
% 
% Permission is hereby granted, free of charge, to any person obtaining a copy
% of this software and associated documentation files (the "Software"), to deal
% in the Software without restriction, subject to the following conditions:
% 
% The above copyright notice and this permission notice shall be included in 
% all copies or substantial portions of the Software.
%
% The Software is provided "as is", without warranty of any kind.
function [pp] = draw_truth(ax1,u,edges)
e1 = cross(u(:,edges(1,1)), ...
           u(:,edges(2,1)));
e2 = cross(u(:,edges(1,2)),...
           u(:,edges(2,2)));
e3 = cross(u(:,edges(1,3)),...
           u(:,edges(2,3)));
e4 = cross(u(:,edges(1,4)),...
           u(:,edges(2,4)));

p1 = cross(e1,e3);
p2 = cross(e2,e4);

pp = renormI([p1 p2]);
s1 = ~pt_is_ideal(pp);

if s1(1)
    draw2d_est_line_segment(ax1, ...
                            [u(:,edges(1,1)) u(:,edges(2,1)) p1], ...
                            e1,...
                            'Color','k', ...
                            'LineStyle','-', ...
                            'LineWidth',2);
    draw2d_est_line_segment(ax1, ...
                            [u(:,edges(1,3)) u(:,edges(2,3)) p1], ...
                            e3, ...
                            'Color','k', ...
                            'LineStyle','-', ...
                            'LineWidth',2);
end

if s1(2)
    draw2d_est_line_segment(ax1, ...
                            [u(:,edges(1,2)) u(:,edges(2,2)) p2], ...
                            e2, ...
                            'Color','k', ...
                            'LineStyle','-', ...
                            'LineWidth',2);
    draw2d_est_line_segment(ax1 ,...
                            [u(:,edges(1,4)) u(:,edges(2,4)) p2], ...
                            e4, ...
                            'Color','k','LineStyle','-','LineWidth',2);
end

draw2d_points(ax1,pp(:,s1));
draw2d_points(ax1,pp(:,s1));

pp2 = renormI([pp(:,s1) u]);
padding = min([max(pp2(1,:))-min(pp2(1,:)) max(pp2(2,:))-min(pp2(2,:))])*0.05;
axis([min(pp2(1,:))-padding ...
      max(pp2(1,:))+padding ...
      min(pp2(2,:))-padding ...
      max(pp2(2,:))+padding]);
