function [solver_names,solver_list,colormap] = make_solver_list()
solver_names = {'$\mH2\vl\vu s_{\vu}\lambda$', ...
                '$\mH22\vl\vu\vv s_{\vv}\lambda$', ...
                '$\mH22\vl s_i$', ...
                '$\mH22\lambda$', ...
                '$\mH22\vl$', ...
                '$\mH222\vl\lambda$', ...
                '$\mH32\vl\lambda$', ...
                '$\mH4\vl\lambda$', ...
                '$\mH^{\prime}222\vl\lambda$', ...
                '$\mH^{\prime}32\vl\lambda$', ...
                '$\mH^{\prime}4\vl\lambda$', ...
                '$\mH22\{\,\lambda\,\}_k$' }; 

solver_list = [ ...
    WRAP.laf2_to_qlsu() ...
    WRAP.laf22_to_qlusv() ...
    WRAP.laf22_to_l('solver_type','linear'), ...        
    WRAP.laf22_to_qH() ...
    WRAP.laf22_to_l('solver_type','polynomial'), ... 
    WRAP.laf222_to_ql() ...
    WRAP.laf32_to_ql() ...
    WRAP.laf4_to_ql() ...
    WRAP.laf222_to_ql('solver', 'ijcv19') ...
    WRAP.laf32_to_ql('solver', 'ijcv19') ...
    WRAP.laf4_to_ql('solver', 'ijcv19') ...
    WRAP.laf22_to_ql() ] ; 

color_list = [0 0 0; ...    
              0 0 255; ...
              0 255 0; ...
              255 0 0; ...
              0 255 255; ...
              255 0 255; ...
              245 245 0; ...
              170 110 40; ... %brown
              0 128 128; ... %teal
              245 130 48; ... %orange
              255 105 180; ... %hot pink
              0 0 128] / 255;
    
color_list = color_list([ 8:11 1:7 12 ],:);

tst = mat2cell(color_list,ones(12,1),3);
colormap = containers.Map(solver_names, tst);